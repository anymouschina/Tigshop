generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// AdminUser (后台用户表)
model AdminUser {
  adminId         Int     @id @default(autoincrement()) @map("admin_id")
  username        String  @default("") @map("username")
  adminType       String  @default("admin") @map("admin_type")
  mobile          String  @default("") @map("mobile")
  avatar          String? @map("avatar")
  password        String  @default("") @map("password")
  email           String  @default("") @map("email")
  addTime         Int     @default(0) @map("add_time")
  authList        String  @default("") @map("auth_list") // JSON
  userId          Int     @default(0) @map("user_id")
  suppliersId     Int     @default(0) @map("suppliers_id")
  roleId          Int     @map("role_id")
  merchantId      Int     @default(0) @map("merchant_id")
  parentId        Int     @default(0) @map("parent_id")
  menuTag         String? @map("menu_tag") // JSON
  orderExport     String? @map("order_export") // JSON
  extra           String? @map("extra") // JSON
  shopId          Int     @default(0) @map("shop_id")
  isUsing         Int     @default(0) @map("is_using")
  initialPassword String  @default("") @map("initial_password")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  adminRole AdminRole @relation(fields: [roleId], references: [roleId])
}

// AdminRole (后台角色表)
model AdminRole {
  roleId        Int    @id @default(autoincrement()) @map("role_id")
  roleName      String @default("") @map("role_name")
  roleDesc      String @default("") @map("role_desc")
  authorityList String @default("") @map("authority_list") // JSON
  adminType     String @default("admin") @map("admin_type")
  merchantId    Int    @default(0) @map("merchant_id")
  shopId        Int    @default(0) @map("shop_id")
  vendorId      Int    @default(0) @map("vendor_id")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  adminUsers AdminUser[]
}

// User (用户表)
model User {
  userId                   Int       @id @default(autoincrement()) @map("user_id")
  username                 String    @unique @default("") @map("username")
  avatar                   String    @default("") @map("avatar")
  mobile                   String    @unique @default("") @map("mobile")
  mobileValidated          Int       @default(0) @map("mobile_validated")
  email                    String    @unique @default("") @map("email")
  emailValidated           Int       @default(0) @map("email_validated")
  nickname                 String    @default("") @map("nickname")
  password                 String    @default("") @map("password")
  birthday                 DateTime? @map("birthday")
  balance                  Decimal   @default(0.00) @map("balance") @db.Decimal(10, 2)
  frozenBalance            Decimal   @default(0.00) @map("frozen_balance") @db.Decimal(10, 2)
  points                   Int       @default(0) @map("points")
  growthPoints             Int       @default(0) @map("growth_points")
  addressId                Int       @default(0) @map("address_id")
  regTime                  DateTime  @default(now()) @map("reg_time")
  lastLogin                DateTime  @default(now()) @map("last_login")
  lastIp                   String    @default("") @map("last_ip")
  rankId                   Int       @default(0) @map("rank_id")
  referrerUserId           Int       @default(0) @map("referrer_user_id")
  fromTag                  Int       @default(0) @map("from_tag")
  isSvip                   Int       @default(0) @map("is_svip")
  svipExpireTime           DateTime  @default(now()) @map("svip_expire_time")
  orderCount               Int       @default(0) @map("order_count")
  orderAmount              Decimal   @default(0.00) @map("order_amount") @db.Decimal(10, 2)
  historyProductIds        String?   @map("history_product_ids") // JSON array
  isDistribution           Int       @default(0) @map("is_distribution")
  distributionRegisterTime DateTime? @map("distribution_register_time")
  wechatImg                String    @default("") @map("wechat_img")
  isCompanyAuth            Int       @default(0) @map("is_company_auth")
  status                   Int       @default(1) @map("status")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  userAddresses     UserAddress[]
  cartItems         Cart[]
  orders            Order[]
  userCoupons       UserCoupon[]
  comments          Comment[]
  collectProducts   CollectProduct[]
  collectShops      CollectShop[]
  blacklistedTokens BlacklistedToken[]
}

// User Address (用户地址表)
model UserAddress {
  addressId   Int    @id @default(autoincrement()) @map("address_id")
  addressTag  String @default("") @map("address_tag")
  userId      Int    @map("user_id")
  consignee   String @default("") @map("consignee")
  email       String @default("") @map("email")
  regionIds   String @map("region_ids") // JSON array
  regionNames String @map("region_names") // JSON array
  address     String @default("") @map("address")
  postcode    String @default("") @map("postcode")
  telephone   String @default("") @map("telephone")
  mobile      String @default("") @map("mobile")
  isDefault   Int    @default(0) @map("is_default")
  isSelected  Int    @default(0) @map("is_selected")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  user User @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

// Product (商品表)
model Product {
  productId         Int      @id @default(autoincrement()) @map("product_id")
  productName       String   @default("") @map("product_name")
  productSn         String   @default("") @map("product_sn")
  productTsn        String?  @map("product_tsn")
  productStock      Int      @default(0) @map("product_stock")
  productPrice      Decimal  @default(0.00) @map("product_price") @db.Decimal(10, 2)
  marketPrice       Decimal  @default(0.00) @map("market_price") @db.Decimal(10, 2)
  shippingTplId     Int      @default(0) @map("shipping_tpl_id")
  productStatus     Int      @default(1) @map("product_status")
  productType       Int      @default(1) @map("product_type")
  categoryId        Int      @map("category_id")
  brandId           Int      @default(0) @map("brand_id")
  shopId            Int      @default(0) @map("shop_id")
  keywords          String   @default("") @map("keywords")
  shopCategoryId    Int      @default(0) @map("shop_category_id")
  checkStatus       Int      @default(1) @map("check_status")
  checkReason       String   @default("") @map("check_reason")
  clickCount        Int      @default(0) @map("click_count")
  productWeight     Decimal  @default(0.000) @map("product_weight") @db.Decimal(10, 3)
  isPromote         Int      @default(0) @map("is_promote")
  isPromoteActivity Int      @default(0) @map("is_promote_activity")
  promotePrice      Decimal  @default(0.00) @map("promote_price") @db.Decimal(10, 2)
  promoteStartDate  DateTime @default(now()) @map("promote_start_date")
  promoteEndDate    DateTime @default(now()) @map("promote_end_date")
  seckillMaxNum     Int      @default(0) @map("seckill_max_num")
  productBrief      String   @default("") @map("product_brief")
  productDesc       String?  @map("product_desc")
  picUrl            String   @default("") @map("pic_url")
  picThumb          String   @default("") @map("pic_thumb")
  picOriginal       String   @default("") @map("pic_original")
  commentTag        String?  @map("comment_tag")
  freeShipping      Int      @default(0) @map("free_shipping")
  integral          Int      @default(0) @map("integral")
  addTime           DateTime @default(now()) @map("add_time")
  sortOrder         Int      @default(100) @map("sort_order")
  storeSortOrder    Int      @default(100) @map("store_sort_order")
  isDelete          Int      @default(0) @map("is_delete")
  isBest            Int      @default(0) @map("is_best")
  isNew             Int      @default(0) @map("is_new")
  isHot             Int      @default(0) @map("is_hot")
  lastUpdate        DateTime @default(now()) @map("last_update")
  remark            String   @default("") @map("remark")
  giveIntegral      Int      @default(-1) @map("give_integral")
  rankIntegral      Int      @default(-1) @map("rank_integral")
  suppliersId       Int?     @map("suppliers_id")
  virtualSales      Int      @default(0) @map("virtual_sales")
  limitNumber       Int      @default(0) @map("limit_number")
  productCare       String?  @map("product_care")
  productRelated    String?  @map("product_related") // JSON array
  productServiceIds String?  @map("product_service_ids") // JSON array

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  category          Category           @relation(fields: [categoryId], references: [categoryId])
  brand             Brand?             @relation(fields: [brandId], references: [brandId])
  shop              Shop?              @relation(fields: [shopId], references: [shopId])
  productSku        ProductSku[]
  productAttributes ProductAttribute[]
  productGallery    ProductGallery[]
  cartItems         Cart[]
  orderItems        OrderItem[]
  comments          Comment[]
  collectProducts   CollectProduct[]
}

// Product SKU (商品SKU表)
model ProductSku {
  skuId           Int     @id @default(autoincrement()) @map("sku_id")
  productId       Int     @map("product_id")
  skuValue        String  @default("") @map("sku_value")
  skuData         String? @map("sku_data") // JSON data
  skuSn           String  @default("") @map("sku_sn")
  skuStock        Int     @default(0) @map("sku_stock")
  skuTsn          String  @default("") @map("sku_tsn")
  skuPrice        Decimal @default(0.00) @map("sku_price") @db.Decimal(10, 2)
  skuPromotePrice Decimal @default(0.00) @map("sku_promote_price") @db.Decimal(10, 2)
  skuMarketPrice  Decimal @default(0.00) @map("sku_market_price") @db.Decimal(10, 2)
  skuPic          String  @default("") @map("sku_pic")
  skuPicThumb     String  @default("") @map("sku_pic_thumb")
  skuWeight       Decimal @default(0.000) @map("sku_weight") @db.Decimal(10, 3)
  skuVolume       Decimal @default(0.000) @map("sku_volume") @db.Decimal(10, 3)
  skuCode         String  @default("") @map("sku_code")
  supplierId      Int     @default(0) @map("supplier_id")
  supplierSkuId   Int     @default(0) @map("supplier_sku_id")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  product    Product     @relation(fields: [productId], references: [productId], onDelete: Cascade)
  cartItems  Cart[]
  orderItems OrderItem[]
}

// Product Attributes (商品属性表)
model ProductAttribute {
  attributesId Int     @id @default(autoincrement()) @map("attributes_id")
  productId    Int     @map("product_id")
  attrType     Int     @default(0) @map("attr_type")
  attrName     String  @default("") @map("attr_name")
  attrValue    String  @default("") @map("attr_value")
  attrPrice    Decimal @default(0.00) @map("attr_price") @db.Decimal(8, 2)
  attrColor    String  @default("") @map("attr_color")
  attrPic      String  @default("") @map("attr_pic")
  attrPicThumb String  @default("") @map("attr_pic_thumb")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  product Product @relation(fields: [productId], references: [productId], onDelete: Cascade)
}

// Product Gallery (商品图片表)
model ProductGallery {
  picId       Int    @id @default(autoincrement()) @map("pic_id")
  productId   Int    @map("product_id")
  picUrl      String @default("") @map("pic_url")
  picDesc     String @default("") @map("pic_desc")
  picThumb    String @default("") @map("pic_thumb")
  picOriginal String @default("") @map("pic_original")
  picLarge    String @default("") @map("pic_large")
  sortOrder   Int    @default(1) @map("sort_order")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  product Product @relation(fields: [productId], references: [productId], onDelete: Cascade)
}

// Category (分类表)
model Category {
  categoryId     Int    @id @default(autoincrement()) @map("category_id")
  categoryName   String @default("") @map("category_name")
  keywords       String @default("") @map("keywords")
  categoryDesc   String @default("") @map("category_desc")
  parentId       Int    @default(0) @map("parent_id")
  sortOrder      Int    @default(50) @map("sort_order")
  measureUnit    String @default("") @map("measure_unit")
  isShow         Int    @default(1) @map("is_show")
  seoTitle       String @default("") @map("seo_title")
  shortName      String @default("") @map("short_name")
  categoryPic    String @default("") @map("category_pic")
  categoryIco    String @default("") @map("category_ico")
  isHot          Int    @default(0) @map("is_hot")
  searchKeywords String @default("") @map("search_keywords")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  parentCategory  Category?  @relation("CategoryHierarchy", fields: [parentId], references: [categoryId])
  childCategories Category[] @relation("CategoryHierarchy")
  products        Product[]
}

// Shop (店铺表)
model Shop {
  shopId                  Int      @id @default(autoincrement()) @map("shop_id")
  shopTitle               String   @default("") @map("shop_title")
  addTime                 DateTime @default(now()) @map("add_time")
  shopLogo                String   @default("") @map("shop_logo")
  clickCount              Int      @default(0) @map("click_count")
  status                  Int      @default(1) @map("status")
  merchantId              Int      @default(0) @map("merchant_id")
  shopMoney               Decimal  @default(0.00) @map("shop_money") @db.Decimal(10, 2)
  frozenMoney             Decimal  @default(0.00) @map("frozen_money") @db.Decimal(10, 2)
  contactMobile           String   @default("") @map("contact_mobile")
  description             String   @default("") @map("description")
  kefuPhone               String   @default("") @map("kefu_phone")
  kefuWeixin              String   @default("") @map("kefu_weixin")
  kefuLink                String   @default("") @map("kefu_link")
  isContactKefu           Int      @default(1) @map("is_contact_kefu")
  kefuInlet               String?  @map("kefu_inlet") // JSON data
  lastLoginTime           DateTime @default(now()) @map("last_login_time")
  vendorSetPriceType      Int      @default(3) @map("vendor_set_price_type")
  vendorSetPriceAutoValue Decimal? @map("vendor_set_price_auto_value") @db.Decimal(10, 2)
  serviceFeeRate          Decimal? @map("service_fee_rate") @db.Decimal(10, 2)
  feeRate                 Decimal? @map("fee_rate") @db.Decimal(10, 2)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  products     Product[]
  orders       Order[]
  orderItems   OrderItem[]
  collectShops CollectShop[]
}

// Cart (购物车表)
model Cart {
  cartId        Int      @id @default(autoincrement()) @map("cart_id")
  userId        Int      @map("user_id")
  productId     Int      @map("product_id")
  productSn     String   @default("") @map("product_sn")
  picThumb      String   @default("") @map("pic_thumb")
  marketPrice   Decimal  @default(0.00) @map("market_price") @db.Decimal(10, 2)
  originalPrice Decimal  @default(0.00) @map("original_price") @db.Decimal(10, 2)
  quantity      Int      @default(0) @map("quantity")
  skuId         Int      @default(0) @map("sku_id")
  skuData       String?  @map("sku_data") // JSON data
  productType   Int      @default(0) @map("product_type")
  isChecked     Int      @default(1) @map("is_checked")
  shopId        Int      @default(0) @map("shop_id")
  type          Int      @default(1) @map("type")
  updateTime    DateTime @default(now()) @map("update_time")
  salesmanId    Int      @default(0) @map("salesman_id")
  extraSkuData  String?  @map("extra_sku_data") // JSON data

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  user       User        @relation(fields: [userId], references: [userId], onDelete: Cascade)
  product    Product     @relation(fields: [productId], references: [productId])
  productSku ProductSku? @relation(fields: [skuId], references: [skuId])
}

// Order (订单表)
model Order {
  orderId            Int      @id @default(autoincrement()) @map("order_id")
  orderSn            String   @unique @default("") @map("order_sn")
  userId             Int      @map("user_id")
  parentOrderId      Int      @default(0) @map("parent_order_id")
  parentOrderSn      String   @default("") @map("parent_order_sn")
  orderStatus        Int      @default(0) @map("order_status")
  shippingStatus     Int      @default(0) @map("shipping_status")
  payStatus          Int      @default(0) @map("pay_status")
  addTime            DateTime @default(now()) @map("add_time")
  consignee          String   @default("") @map("consignee")
  address            String   @default("") @map("address")
  regionIds          String   @map("region_ids") // JSON array
  regionNames        String   @map("region_names") // JSON array
  addressData        String?  @map("address_data") // JSON data
  mobile             String   @default("") @map("mobile")
  email              String   @default("") @map("email")
  buyerNote          String   @default("") @map("buyer_note")
  adminNote          String   @default("") @map("admin_note")
  shippingMethod     Int      @default(1) @map("shipping_method")
  logisticsId        Int      @default(0) @map("logistics_id")
  logisticsName      String   @default("") @map("logistics_name")
  shippingTypeId     Int      @default(0) @map("shipping_type_id")
  shippingTypeName   String   @default("") @map("shipping_type_name")
  trackingNo         String   @default("") @map("tracking_no")
  shippingTime       DateTime @default(now()) @map("shipping_time")
  receivedTime       DateTime @default(now()) @map("received_time")
  payTypeId          Int      @default(0) @map("pay_type_id")
  payTime            DateTime @default(now()) @map("pay_time")
  usePoints          Int      @default(0) @map("use_points")
  isNeedCommisson    Int      @default(0) @map("is_need_commisson")
  distributionStatus Int      @default(0) @map("distribution_status")
  referrerUserId     Int      @default(0) @map("referrer_user_id")
  isDel              Int      @default(0) @map("is_del")
  shopId             Int      @default(0) @map("shop_id")
  isStoreSplited     Int      @default(0) @map("is_store_splited")
  commentStatus      Int      @default(0) @map("comment_status")
  totalAmount        Decimal  @default(0.00) @map("total_amount") @db.Decimal(10, 2)
  paidAmount         Decimal  @default(0.00) @map("paid_amount") @db.Decimal(10, 2)
  unpaidAmount       Decimal  @default(0.00) @map("unpaid_amount") @db.Decimal(10, 2)
  unrefundAmount     Decimal  @default(0.00) @map("unrefund_amount") @db.Decimal(10, 2)
  productAmount      Decimal  @default(0.00) @map("product_amount") @db.Decimal(10, 2)
  couponAmount       Decimal  @default(0.00) @map("coupon_amount") @db.Decimal(10, 2)
  pointsAmount       Decimal  @default(0.00) @map("points_amount") @db.Decimal(10, 2)
  discountAmount     Decimal  @default(0.00) @map("discount_amount") @db.Decimal(10, 2)
  balance            Decimal  @default(0.00) @map("balance") @db.Decimal(10, 2)
  onlinePaidAmount   Decimal  @default(0.00) @map("online_paid_amount") @db.Decimal(10, 2)
  offlinePaidAmount  Decimal  @default(0.00) @map("offline_paid_amount") @db.Decimal(10, 2)
  serviceFee         Decimal  @default(0.00) @map("service_fee") @db.Decimal(10, 2)
  shippingFee        Decimal  @default(0.00) @map("shipping_fee") @db.Decimal(10, 2)
  invoiceFee         Decimal  @default(0.00) @map("invoice_fee") @db.Decimal(10, 2)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  user        User         @relation(fields: [userId], references: [userId], onDelete: Cascade)
  shop        Shop?        @relation(fields: [shopId], references: [shopId])
  orderItems  OrderItem[]
  payments    Payment[]
  userCoupons UserCoupon[]
}

// Order Item (订单项表)
model OrderItem {
  itemId             Int     @id @default(autoincrement()) @map("item_id")
  orderId            Int     @map("order_id")
  orderSn            String  @default("") @map("order_sn")
  userId             Int     @map("user_id")
  price              Decimal @default(0.00) @map("price") @db.Decimal(10, 2)
  quantity           Int     @default(1) @map("quantity")
  productId          Int     @map("product_id")
  productName        String  @default("") @map("product_name")
  productSn          String  @default("") @map("product_sn")
  picThumb           String  @default("") @map("pic_thumb")
  skuId              Int     @default(0) @map("sku_id")
  skuData            String  @map("sku_data") // JSON data
  deliveryQuantity   Int     @default(0) @map("delivery_quantity")
  productType        Int     @default(1) @map("product_type")
  isGift             Int     @default(0) @map("is_gift")
  shopId             Int     @default(0) @map("shop_id")
  isPin              Int     @default(0) @map("is_pin")
  prepayPrice        Decimal @default(0.00) @map("prepay_price") @db.Decimal(8, 2)
  commission         String  @default("") @map("commission")
  originPrice        Decimal @default(0.00) @map("origin_price") @db.Decimal(10, 2)
  promotionData      String? @map("promotion_data") // JSON data
  isSeckill          Int     @default(0) @map("is_seckill")
  extraSkuData       String? @map("extra_sku_data") // JSON data
  suppliersId        Int     @default(0) @map("suppliers_id")
  cardGroupName      String  @default("") @map("card_group_name")
  vendorProductId    Int?    @map("vendor_product_id")
  vendorProductSkuId Int?    @map("vendor_product_sku_id")
  vendorId           Int?    @map("vendor_id")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  order      Order       @relation(fields: [orderId], references: [orderId], onDelete: Cascade)
  product    Product     @relation(fields: [productId], references: [productId])
  productSku ProductSku? @relation(fields: [skuId], references: [skuId])
  shop       Shop?       @relation(fields: [shopId], references: [shopId])
}

// Payment (支付表)
model Payment {
  paylogId      Int      @id @default(autoincrement()) @map("paylog_id")
  paySn         String   @unique @default("") @map("pay_sn")
  payName       String   @default("") @map("pay_name")
  orderId       Int      @map("order_id")
  orderSn       String   @default("") @map("order_sn")
  orderAmount   Decimal  @map("order_amount") @db.Decimal(10, 2)
  orderType     Int      @default(0) @map("order_type")
  payAmount     Decimal  @default(0.00) @map("pay_amount") @db.Decimal(10, 2)
  payStatus     Int      @default(0) @map("pay_status")
  payCode       String   @default("") @map("pay_code")
  addTime       DateTime @default(now()) @map("add_time")
  transactionId String   @default("") @map("transaction_id")
  notifyData    String   @default("") @map("notify_data")
  refundAmount  Decimal  @default(0.00) @map("refund_amount") @db.Decimal(8, 2)
  tokenCode     String   @default("") @map("token_code")
  appid         String?  @map("appid")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  order Order @relation(fields: [orderId], references: [orderId], onDelete: Cascade)
}

// Coupon (优惠券表)
model Coupon {
  couponId        Int      @id @default(autoincrement()) @map("coupon_id")
  couponName      String   @default("") @map("coupon_name")
  couponMoney     Decimal  @default(0.00) @map("coupon_money") @db.Decimal(10, 2)
  couponDiscount  Decimal  @default(10.0) @map("coupon_discount") @db.Decimal(4, 1)
  couponDesc      String   @default("") @map("coupon_desc")
  couponType      Int      @default(1) @map("coupon_type")
  sendRange       Int      @default(0) @map("send_range")
  sendRangeData   String   @default("") @map("send_range_data") // JSON data
  minOrderAmount  Decimal  @default(0.00) @map("min_order_amount") @db.Decimal(10, 2)
  sendStartDate   DateTime @default(now()) @map("send_start_date")
  sendEndDate     DateTime @default(now()) @map("send_end_date")
  sendType        Int      @default(0) @map("send_type")
  useDay          Int      @default(30) @map("use_day")
  useStartDate    DateTime @default(now()) @map("use_start_date")
  useEndDate      DateTime @default(now()) @map("use_end_date")
  isShow          Int      @default(0) @map("is_show")
  isGlobal        Int      @default(0) @map("is_global")
  isNewUser       Int      @default(0) @map("is_new_user")
  enabledClickGet Int      @default(0) @map("enabled_click_get")
  limitUserRank   String?  @map("limit_user_rank") // JSON data
  shopId          Int      @default(0) @map("shop_id")
  isDelete        Int      @default(0) @map("is_delete")
  limitNum        Int      @default(0) @map("limit_num")
  delayDay        Int      @default(0) @map("delay_day")
  sendNum         Int      @default(1) @map("send_num")
  maxOrderAmount  Decimal  @default(0.00) @map("max_order_amount") @db.Decimal(10, 2)
  couponUnit      Int      @default(1) @map("coupon_unit")
  reduceType      Int      @default(1) @map("reduce_type")
  addTime         DateTime @default(now()) @map("add_time")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  userCoupons UserCoupon[]
}

// User Coupon (用户优惠券表)
model UserCoupon {
  id        Int       @id @default(autoincrement())
  couponId  Int       @map("coupon_id")
  couponSn  String    @default("") @map("coupon_sn")
  userId    Int       @map("user_id")
  usedTime  DateTime? @map("used_time")
  orderId   Int       @default(0) @map("order_id")
  startDate DateTime  @default(now()) @map("start_date")
  endDate   DateTime  @default(now()) @map("end_date")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  coupon Coupon @relation(fields: [couponId], references: [couponId], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  order  Order? @relation(fields: [orderId], references: [orderId])
}

// Comment (评论表)
model Comment {
  commentId   Int      @id @default(autoincrement()) @map("comment_id")
  userId      Int      @map("user_id")
  username    String   @default("") @map("username")
  avatar      String   @default("") @map("avatar")
  productId   Int      @map("product_id")
  orderId     Int      @default(0) @map("order_id")
  orderItemId Int      @default(0) @map("order_item_id")
  commentRank Int      @default(0) @map("comment_rank")
  content     String   @default("") @map("content")
  addTime     DateTime @default(now()) @map("add_time")
  status      Int      @default(0) @map("status")
  parentId    Int      @default(0) @map("parent_id")
  usefull     Int      @default(0) @map("usefull")
  useless     Int      @default(0) @map("useless")
  commentTag  String?  @map("comment_tag") // JSON data
  showPics    String?  @map("show_pics") // JSON data
  isRecommend Int      @default(0) @map("is_recommend")
  isTop       Int      @default(0) @map("is_top")
  isShowed    Int      @default(0) @map("is_showed")
  isDefault   Int      @default(0) @map("is_default")
  sortOrder   Int      @default(50) @map("sort_order")
  shopId      Int      @default(0) @map("shop_id")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  user          User      @relation(fields: [userId], references: [userId], onDelete: Cascade)
  product       Product   @relation(fields: [productId], references: [productId], onDelete: Cascade)
  parentComment Comment?  @relation("CommentHierarchy", fields: [parentId], references: [commentId])
  replies       Comment[] @relation("CommentHierarchy")
}

// Favorite/Collect Product (收藏表)
model CollectProduct {
  collectId Int      @id @default(autoincrement()) @map("collect_id")
  userId    Int      @map("user_id")
  productId Int      @map("product_id")
  addTime   DateTime @default(now()) @map("add_time")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  user    User    @relation(fields: [userId], references: [userId], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [productId], onDelete: Cascade)

  @@unique([userId, productId])
}

// CollectShop (收藏店铺表)
model CollectShop {
  collectId Int      @id @default(autoincrement()) @map("collect_id")
  userId    Int      @map("user_id")
  shopId    Int      @map("shop_id")
  addTime   DateTime @default(now()) @map("add_time")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Relationships
  user      User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  shop      Shop     @relation(fields: [shopId], references: [shopId], onDelete: Cascade)

  @@unique([userId, shopId])
}

// Brand (品牌表)
model Brand {
  brandId      Int     @id @default(autoincrement()) @map("brand_id")
  brandName    String  @default("") @map("brand_name")
  brandLogo    String  @default("") @map("brand_logo")
  brandDesc    String? @map("brand_desc")
  siteUrl      String  @default("") @map("site_url")
  sortOrder    Int     @default(50) @map("sort_order")
  isShow       Int     @default(1) @map("is_show")
  brandType    String  @default("") @map("brand_type")
  brandIsHot   Int     @default(0) @map("brand_is_hot")
  firstWord    String  @default("") @map("first_word")
  isStoreBrand Int     @default(0) @map("is_store_brand")
  checkStatus  Int     @default(0) @map("check_status")
  brandEnName  String  @default("") @map("brand_en_name")
  shopId       Int     @default(0) @map("shop_id")
  status       Int     @default(0) @map("status")
  rejectRemark String? @map("reject_remark")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relationships
  products Product[]
}

// BlacklistedToken (黑名单令牌表)
model BlacklistedToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int      @map("user_id")
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now())

  // Relationships
  user User @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("blacklisted_token")
}

// Article (文章表)
model Article {
  articleId   Int      @id @default(autoincrement()) @map("article_id")
  title       String   @default("") @map("title")
  content     String   @default("") @map("content")
  image       String?  @map("image")
  categoryId  Int      @default(0) @map("category_id")
  author      String   @default("") @map("author")
  source      String   @default("") @map("source")
  keywords    String   @default("") @map("keywords")
  description String   @default("") @map("description")
  clickCount  Int      @default(0) @map("click_count")
  isShow      Int      @default(1) @map("is_show")
  sortOrder   Int      @default(100) @map("sort_order")
  addTime     DateTime @default(now()) @map("add_time")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("article")
}
