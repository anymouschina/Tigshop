generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// AdminUser (后台用户表)
model AdminUser {
  adminId        Int      @id @default(autoincrement()) @map("admin_id")
  username       String   @map("username") @default("")
  adminType      String   @map("admin_type") @default("admin")
  mobile         String   @map("mobile") @default("")
  avatar         String?  @map("avatar")
  password       String   @map("password") @default("")
  email          String   @map("email") @default("")
  addTime        Int      @map("add_time") @default(0)
  authList       String   @map("auth_list") @default("") // JSON
  userId         Int      @map("user_id") @default(0)
  suppliersId    Int      @map("suppliers_id") @default(0)
  roleId         Int      @map("role_id")
  merchantId     Int      @map("merchant_id") @default(0)
  parentId       Int      @map("parent_id") @default(0)
  menuTag        String?  @map("menu_tag") // JSON
  orderExport    String?  @map("order_export") // JSON
  extra          String?  @map("extra") // JSON
  shopId         Int      @map("shop_id") @default(0)
  isUsing        Int      @map("is_using") @default(0)
  initialPassword String   @map("initial_password") @default("")

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  adminRole      AdminRole @relation(fields: [roleId], references: [roleId])
}

// AdminRole (后台角色表)
model AdminRole {
  roleId         Int      @id @default(autoincrement()) @map("role_id")
  roleName       String   @map("role_name") @default("")
  roleDesc       String   @map("role_desc") @default("")
  authorityList  String   @map("authority_list") @default("") // JSON
  adminType      String   @map("admin_type") @default("admin")
  merchantId     Int      @map("merchant_id") @default(0)
  shopId         Int      @map("shop_id") @default(0)
  vendorId       Int      @map("vendor_id") @default(0)

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  adminUsers     AdminUser[]
}

// User (用户表)
model User {
  userId                Int      @id @default(autoincrement()) @map("user_id")
  username              String   @unique @map("username") @default("")
  avatar                String   @map("avatar") @default("")
  mobile                String   @unique @map("mobile") @default("")
  mobileValidated       Int      @map("mobile_validated") @default(0)
  email                 String   @unique @map("email") @default("")
  emailValidated        Int      @map("email_validated") @default(0)
  nickname              String   @map("nickname") @default("")
  password              String   @map("password") @default("")
  birthday              DateTime? @map("birthday")
  balance               Decimal  @map("balance") @db.Decimal(10, 2) @default(0.00)
  frozenBalance         Decimal  @map("frozen_balance") @db.Decimal(10, 2) @default(0.00)
  points                Int      @map("points") @default(0)
  growthPoints          Int      @map("growth_points") @default(0)
  addressId             Int      @map("address_id") @default(0)
  regTime               DateTime @map("reg_time") @default(now())
  lastLogin             DateTime @map("last_login") @default(now())
  lastIp                String   @map("last_ip") @default("")
  rankId                Int      @map("rank_id") @default(0)
  referrerUserId        Int      @map("referrer_user_id") @default(0)
  fromTag               Int      @map("from_tag") @default(0)
  isSvip                Int      @map("is_svip") @default(0)
  svipExpireTime        DateTime @map("svip_expire_time") @default(now())
  orderCount            Int      @map("order_count") @default(0)
  orderAmount           Decimal  @map("order_amount") @db.Decimal(10, 2) @default(0.00)
  historyProductIds     String?  @map("history_product_ids") // JSON array
  isDistribution        Int      @map("is_distribution") @default(0)
  distributionRegisterTime DateTime? @map("distribution_register_time")
  wechatImg             String   @map("wechat_img") @default("")
  isCompanyAuth         Int      @map("is_company_auth") @default(0)
  status                Int      @map("status") @default(1)

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  userAddresses         UserAddress[]
  cartItems             Cart[]
  orders                Order[]
  userCoupons           UserCoupon[]
  comments              Comment[]
  collectProducts       CollectProduct[]
  collectShops          CollectShop[]
  blacklistedTokens     BlacklistedToken[]
  }

// User Address (用户地址表)
model UserAddress {
  addressId            Int      @id @default(autoincrement()) @map("address_id")
  addressTag           String   @map("address_tag") @default("")
  userId               Int      @map("user_id")
  consignee            String   @map("consignee") @default("")
  email                String   @map("email") @default("")
  regionIds            String   @map("region_ids") // JSON array
  regionNames          String   @map("region_names") // JSON array
  address              String   @map("address") @default("")
  postcode             String   @map("postcode") @default("")
  telephone            String   @map("telephone") @default("")
  mobile               String   @map("mobile") @default("")
  isDefault            Int      @map("is_default") @default(0)
  isSelected           Int      @map("is_selected") @default(0)

  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  // Relationships
  user                 User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
}

// Product (商品表)
model Product {
  productId             Int      @id @default(autoincrement()) @map("product_id")
  productName           String   @map("product_name") @default("")
  productSn             String   @map("product_sn") @default("")
  productTsn            String?  @map("product_tsn")
  productStock          Int      @map("product_stock") @default(0)
  productPrice          Decimal  @map("product_price") @db.Decimal(10, 2) @default(0.00)
  marketPrice           Decimal  @map("market_price") @db.Decimal(10, 2) @default(0.00)
  shippingTplId         Int      @map("shipping_tpl_id") @default(0)
  productStatus         Int      @map("product_status") @default(1)
  productType           Int      @map("product_type") @default(1)
  categoryId            Int      @map("category_id")
  brandId               Int      @map("brand_id") @default(0)
  shopId                Int      @map("shop_id") @default(0)
  keywords              String   @map("keywords") @default("")
  shopCategoryId        Int      @map("shop_category_id") @default(0)
  checkStatus           Int      @map("check_status") @default(1)
  checkReason           String   @map("check_reason") @default("")
  clickCount            Int      @map("click_count") @default(0)
  productWeight         Decimal  @map("product_weight") @db.Decimal(10, 3) @default(0.000)
  isPromote             Int      @map("is_promote") @default(0)
  isPromoteActivity     Int      @map("is_promote_activity") @default(0)
  promotePrice          Decimal  @map("promote_price") @db.Decimal(10, 2) @default(0.00)
  promoteStartDate      DateTime @map("promote_start_date") @default(now())
  promoteEndDate        DateTime @map("promote_end_date") @default(now())
  seckillMaxNum         Int      @map("seckill_max_num") @default(0)
  productBrief          String   @map("product_brief") @default("")
  productDesc           String?  @map("product_desc")
  picUrl                String   @map("pic_url") @default("")
  picThumb              String   @map("pic_thumb") @default("")
  picOriginal           String   @map("pic_original") @default("")
  commentTag            String?  @map("comment_tag")
  freeShipping          Int      @map("free_shipping") @default(0)
  integral              Int      @map("integral") @default(0)
  addTime               DateTime @map("add_time") @default(now())
  sortOrder             Int      @map("sort_order") @default(100)
  storeSortOrder        Int      @map("store_sort_order") @default(100)
  isDelete              Int      @map("is_delete") @default(0)
  isBest                Int      @map("is_best") @default(0)
  isNew                 Int      @map("is_new") @default(0)
  isHot                 Int      @map("is_hot") @default(0)
  lastUpdate            DateTime @map("last_update") @default(now())
  remark                String   @map("remark") @default("")
  giveIntegral          Int      @map("give_integral") @default(-1)
  rankIntegral          Int      @map("rank_integral") @default(-1)
  suppliersId           Int?     @map("suppliers_id")
  virtualSales          Int      @map("virtual_sales") @default(0)
  limitNumber           Int      @map("limit_number") @default(0)
  productCare           String?  @map("product_care")
  productRelated        String?  @map("product_related") // JSON array
  productServiceIds     String?  @map("product_service_ids") // JSON array

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  category              Category @relation(fields: [categoryId], references: [categoryId])
  brand                 Brand?   @relation(fields: [brandId], references: [brandId])
  shop                  Shop?    @relation(fields: [shopId], references: [shopId])
  productSku            ProductSku[]
  productAttributes     ProductAttribute[]
  productGallery        ProductGallery[]
  cartItems             Cart[]
  orderItems            OrderItem[]
  comments              Comment[]
  collectProducts       CollectProduct[]
  }

// Product SKU (商品SKU表)
model ProductSku {
  skuId                 Int      @id @default(autoincrement()) @map("sku_id")
  productId             Int      @map("product_id")
  skuValue              String   @map("sku_value") @default("")
  skuData               String?  @map("sku_data") // JSON data
  skuSn                 String   @map("sku_sn") @default("")
  skuStock              Int      @map("sku_stock") @default(0)
  skuTsn                String   @map("sku_tsn") @default("")
  skuPrice              Decimal  @map("sku_price") @db.Decimal(10, 2) @default(0.00)
  skuPromotePrice       Decimal  @map("sku_promote_price") @db.Decimal(10, 2) @default(0.00)
  skuMarketPrice        Decimal  @map("sku_market_price") @db.Decimal(10, 2) @default(0.00)
  skuPic                String   @map("sku_pic") @default("")
  skuPicThumb           String   @map("sku_pic_thumb") @default("")
  skuWeight             Decimal  @map("sku_weight") @db.Decimal(10, 3) @default(0.000)
  skuVolume             Decimal  @map("sku_volume") @db.Decimal(10, 3) @default(0.000)
  skuCode               String   @map("sku_code") @default("")
  supplierId            Int      @map("supplier_id") @default(0)
  supplierSkuId         Int      @map("supplier_sku_id") @default(0)

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  product               Product  @relation(fields: [productId], references: [productId], onDelete: Cascade)
  cartItems             Cart[]
  orderItems            OrderItem[]
}

// Product Attributes (商品属性表)
model ProductAttribute {
  attributesId          Int      @id @default(autoincrement()) @map("attributes_id")
  productId             Int      @map("product_id")
  attrType              Int      @map("attr_type") @default(0)
  attrName              String   @map("attr_name") @default("")
  attrValue             String   @map("attr_value") @default("")
  attrPrice             Decimal  @map("attr_price") @db.Decimal(8, 2) @default(0.00)
  attrColor             String   @map("attr_color") @default("")
  attrPic               String   @map("attr_pic") @default("")
  attrPicThumb          String   @map("attr_pic_thumb") @default("")

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  product               Product  @relation(fields: [productId], references: [productId], onDelete: Cascade)
}

// Product Gallery (商品图片表)
model ProductGallery {
  picId                 Int      @id @default(autoincrement()) @map("pic_id")
  productId             Int      @map("product_id")
  picUrl                String   @map("pic_url") @default("")
  picDesc               String   @map("pic_desc") @default("")
  picThumb              String   @map("pic_thumb") @default("")
  picOriginal           String   @map("pic_original") @default("")
  picLarge              String   @map("pic_large") @default("")
  sortOrder             Int      @map("sort_order") @default(1)

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  product               Product  @relation(fields: [productId], references: [productId], onDelete: Cascade)
}

// Category (分类表)
model Category {
  categoryId            Int      @id @default(autoincrement()) @map("category_id")
  categoryName          String   @map("category_name") @default("")
  keywords              String   @map("keywords") @default("")
  categoryDesc          String   @map("category_desc") @default("")
  parentId              Int      @map("parent_id") @default(0)
  sortOrder             Int      @map("sort_order") @default(50)
  measureUnit           String   @map("measure_unit") @default("")
  isShow                Int      @map("is_show") @default(1)
  seoTitle              String   @map("seo_title") @default("")
  shortName             String   @map("short_name") @default("")
  categoryPic           String   @map("category_pic") @default("")
  categoryIco           String   @map("category_ico") @default("")
  isHot                 Int      @map("is_hot") @default(0)
  searchKeywords        String   @map("search_keywords") @default("")

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  parentCategory         Category? @relation("CategoryHierarchy", fields: [parentId], references: [categoryId])
  childCategories        Category[] @relation("CategoryHierarchy")
  products              Product[]
  }

// Shop (店铺表)
model Shop {
  shopId                Int      @id @default(autoincrement()) @map("shop_id")
  shopTitle             String   @map("shop_title") @default("")
  addTime               DateTime @map("add_time") @default(now())
  shopLogo              String   @map("shop_logo") @default("")
  clickCount            Int      @map("click_count") @default(0)
  status                Int      @map("status") @default(1)
  merchantId            Int      @map("merchant_id") @default(0)
  shopMoney             Decimal  @map("shop_money") @db.Decimal(10, 2) @default(0.00)
  frozenMoney           Decimal  @map("frozen_money") @db.Decimal(10, 2) @default(0.00)
  contactMobile         String   @map("contact_mobile") @default("")
  description           String   @map("description") @default("")
  kefuPhone             String   @map("kefu_phone") @default("")
  kefuWeixin            String   @map("kefu_weixin") @default("")
  kefuLink              String   @map("kefu_link") @default("")
  isContactKefu         Int      @map("is_contact_kefu") @default(1)
  kefuInlet             String?  @map("kefu_inlet") // JSON data
  lastLoginTime         DateTime @map("last_login_time") @default(now())
  vendorSetPriceType    Int      @map("vendor_set_price_type") @default(3)
  vendorSetPriceAutoValue Decimal? @map("vendor_set_price_auto_value") @db.Decimal(10, 2)
  serviceFeeRate        Decimal? @map("service_fee_rate") @db.Decimal(10, 2)
  feeRate               Decimal? @map("fee_rate") @db.Decimal(10, 2)

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  products              Product[]
    orders                Order[]
  orderItems            OrderItem[]
  collectShops          CollectShop[]
}

// Cart (购物车表)
model Cart {
  cartId                Int      @id @default(autoincrement()) @map("cart_id")
  userId                Int      @map("user_id")
  productId             Int      @map("product_id")
  productSn             String   @map("product_sn") @default("")
  picThumb              String   @map("pic_thumb") @default("")
  marketPrice           Decimal  @map("market_price") @db.Decimal(10, 2) @default(0.00)
  originalPrice         Decimal  @map("original_price") @db.Decimal(10, 2) @default(0.00)
  quantity              Int      @map("quantity") @default(0)
  skuId                 Int      @map("sku_id") @default(0)
  skuData               String?  @map("sku_data") // JSON data
  productType           Int      @map("product_type") @default(0)
  isChecked             Int      @map("is_checked") @default(1)
  shopId                Int      @map("shop_id") @default(0)
  type                  Int      @map("type") @default(1)
  updateTime            DateTime @map("update_time") @default(now())
  salesmanId            Int      @map("salesman_id") @default(0)
  extraSkuData          String?  @map("extra_sku_data") // JSON data

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  user                  User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  product               Product  @relation(fields: [productId], references: [productId])
  productSku            ProductSku? @relation(fields: [skuId], references: [skuId])
}

// Order (订单表)
model Order {
  orderId               Int      @id @default(autoincrement()) @map("order_id")
  orderSn               String   @unique @map("order_sn") @default("")
  userId                Int      @map("user_id")
  parentOrderId         Int      @map("parent_order_id") @default(0)
  parentOrderSn         String   @map("parent_order_sn") @default("")
  orderStatus           Int      @map("order_status") @default(0)
  shippingStatus        Int      @map("shipping_status") @default(0)
  payStatus             Int      @map("pay_status") @default(0)
  addTime               DateTime @map("add_time") @default(now())
  consignee             String   @map("consignee") @default("")
  address               String   @map("address") @default("")
  regionIds             String   @map("region_ids") // JSON array
  regionNames           String   @map("region_names") // JSON array
  addressData           String?  @map("address_data") // JSON data
  mobile                String   @map("mobile") @default("")
  email                 String   @map("email") @default("")
  buyerNote             String   @map("buyer_note") @default("")
  adminNote             String   @map("admin_note") @default("")
  shippingMethod        Int      @map("shipping_method") @default(1)
  logisticsId           Int      @map("logistics_id") @default(0)
  logisticsName         String   @map("logistics_name") @default("")
  shippingTypeId        Int      @map("shipping_type_id") @default(0)
  shippingTypeName      String   @map("shipping_type_name") @default("")
  trackingNo            String   @map("tracking_no") @default("")
  shippingTime          DateTime @map("shipping_time") @default(now())
  receivedTime          DateTime @map("received_time") @default(now())
  payTypeId             Int      @map("pay_type_id") @default(0)
  payTime               DateTime @map("pay_time") @default(now())
  usePoints             Int      @map("use_points") @default(0)
  isNeedCommisson       Int      @map("is_need_commisson") @default(0)
  distributionStatus    Int      @map("distribution_status") @default(0)
  referrerUserId        Int      @map("referrer_user_id") @default(0)
  isDel                 Int      @map("is_del") @default(0)
  shopId                Int      @map("shop_id") @default(0)
  isStoreSplited        Int      @map("is_store_splited") @default(0)
  commentStatus         Int      @map("comment_status") @default(0)
  totalAmount           Decimal  @map("total_amount") @db.Decimal(10, 2) @default(0.00)
  paidAmount            Decimal  @map("paid_amount") @db.Decimal(10, 2) @default(0.00)
  unpaidAmount          Decimal  @map("unpaid_amount") @db.Decimal(10, 2) @default(0.00)
  unrefundAmount        Decimal  @map("unrefund_amount") @db.Decimal(10, 2) @default(0.00)
  productAmount         Decimal  @map("product_amount") @db.Decimal(10, 2) @default(0.00)
  couponAmount          Decimal  @map("coupon_amount") @db.Decimal(10, 2) @default(0.00)
  pointsAmount          Decimal  @map("points_amount") @db.Decimal(10, 2) @default(0.00)
  discountAmount        Decimal  @map("discount_amount") @db.Decimal(10, 2) @default(0.00)
  balance               Decimal  @map("balance") @db.Decimal(10, 2) @default(0.00)
  onlinePaidAmount      Decimal  @map("online_paid_amount") @db.Decimal(10, 2) @default(0.00)
  offlinePaidAmount     Decimal  @map("offline_paid_amount") @db.Decimal(10, 2) @default(0.00)
  serviceFee            Decimal  @map("service_fee") @db.Decimal(10, 2) @default(0.00)
  shippingFee           Decimal  @map("shipping_fee") @db.Decimal(10, 2) @default(0.00)
  invoiceFee            Decimal  @map("invoice_fee") @db.Decimal(10, 2) @default(0.00)

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  user                  User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  shop                  Shop?    @relation(fields: [shopId], references: [shopId])
  orderItems            OrderItem[]
  payments              Payment[]
  userCoupons           UserCoupon[]
}

// Order Item (订单项表)
model OrderItem {
  itemId                Int      @id @default(autoincrement()) @map("item_id")
  orderId               Int      @map("order_id")
  orderSn               String   @map("order_sn") @default("")
  userId                Int      @map("user_id")
  price                 Decimal  @map("price") @db.Decimal(10, 2) @default(0.00)
  quantity              Int      @map("quantity") @default(1)
  productId             Int      @map("product_id")
  productName           String   @map("product_name") @default("")
  productSn             String   @map("product_sn") @default("")
  picThumb              String   @map("pic_thumb") @default("")
  skuId                 Int      @map("sku_id") @default(0)
  skuData               String   @map("sku_data") // JSON data
  deliveryQuantity      Int      @map("delivery_quantity") @default(0)
  productType           Int      @map("product_type") @default(1)
  isGift                Int      @map("is_gift") @default(0)
  shopId                Int      @map("shop_id") @default(0)
  isPin                 Int      @map("is_pin") @default(0)
  prepayPrice           Decimal  @map("prepay_price") @db.Decimal(8, 2) @default(0.00)
  commission            String   @map("commission") @default("")
  originPrice           Decimal  @map("origin_price") @db.Decimal(10, 2) @default(0.00)
  promotionData         String?  @map("promotion_data") // JSON data
  isSeckill             Int      @map("is_seckill") @default(0)
  extraSkuData          String?  @map("extra_sku_data") // JSON data
  suppliersId           Int      @map("suppliers_id") @default(0)
  cardGroupName         String   @map("card_group_name") @default("")
  vendorProductId       Int?     @map("vendor_product_id")
  vendorProductSkuId    Int?     @map("vendor_product_sku_id")
  vendorId              Int?     @map("vendor_id")

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  order                 Order     @relation(fields: [orderId], references: [orderId], onDelete: Cascade)
  product               Product   @relation(fields: [productId], references: [productId])
  productSku            ProductSku? @relation(fields: [skuId], references: [skuId])
  shop                  Shop?     @relation(fields: [shopId], references: [shopId])
}

// Payment (支付表)
model Payment {
  paylogId              Int      @id @default(autoincrement()) @map("paylog_id")
  paySn                 String   @unique @map("pay_sn") @default("")
  payName               String   @map("pay_name") @default("")
  orderId               Int      @map("order_id")
  orderSn               String   @map("order_sn") @default("")
  orderAmount           Decimal  @map("order_amount") @db.Decimal(10, 2)
  orderType             Int      @map("order_type") @default(0)
  payAmount             Decimal  @map("pay_amount") @db.Decimal(10, 2) @default(0.00)
  payStatus             Int      @map("pay_status") @default(0)
  payCode               String   @map("pay_code") @default("")
  addTime               DateTime @map("add_time") @default(now())
  transactionId         String   @map("transaction_id") @default("")
  notifyData            String   @map("notify_data") @default("")
  refundAmount          Decimal  @map("refund_amount") @db.Decimal(8, 2) @default(0.00)
  tokenCode             String   @map("token_code") @default("")
  appid                 String?  @map("appid")

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  order                 Order     @relation(fields: [orderId], references: [orderId], onDelete: Cascade)
}

// Coupon (优惠券表)
model Coupon {
  couponId              Int      @id @default(autoincrement()) @map("coupon_id")
  couponName            String   @map("coupon_name") @default("")
  couponMoney           Decimal  @map("coupon_money") @db.Decimal(10, 2) @default(0.00)
  couponDiscount        Decimal  @map("coupon_discount") @db.Decimal(4, 1) @default(10.0)
  couponDesc            String   @map("coupon_desc") @default("")
  couponType            Int      @map("coupon_type") @default(1)
  sendRange             Int      @map("send_range") @default(0)
  sendRangeData         String   @map("send_range_data") @default("") // JSON data
  minOrderAmount        Decimal  @map("min_order_amount") @db.Decimal(10, 2) @default(0.00)
  sendStartDate         DateTime @map("send_start_date") @default(now())
  sendEndDate           DateTime @map("send_end_date") @default(now())
  sendType              Int      @map("send_type") @default(0)
  useDay                Int      @map("use_day") @default(30)
  useStartDate          DateTime @map("use_start_date") @default(now())
  useEndDate            DateTime @map("use_end_date") @default(now())
  isShow                Int      @map("is_show") @default(0)
  isGlobal              Int      @map("is_global") @default(0)
  isNewUser             Int      @map("is_new_user") @default(0)
  enabledClickGet       Int      @map("enabled_click_get") @default(0)
  limitUserRank         String?  @map("limit_user_rank") // JSON data
  shopId                Int      @map("shop_id") @default(0)
  isDelete              Int      @map("is_delete") @default(0)
  limitNum              Int      @map("limit_num") @default(0)
  delayDay              Int      @map("delay_day") @default(0)
  sendNum               Int      @map("send_num") @default(1)
  maxOrderAmount        Decimal  @map("max_order_amount") @db.Decimal(10, 2) @default(0.00)
  couponUnit            Int      @map("coupon_unit") @default(1)
  reduceType            Int      @map("reduce_type") @default(1)
  addTime               DateTime @map("add_time") @default(now())

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  userCoupons           UserCoupon[]
}

// User Coupon (用户优惠券表)
model UserCoupon {
  id                    Int      @id @default(autoincrement())
  couponId              Int      @map("coupon_id")
  couponSn              String   @map("coupon_sn") @default("")
  userId                Int      @map("user_id")
  usedTime              DateTime? @map("used_time")
  orderId               Int      @map("order_id") @default(0)
  startDate             DateTime @map("start_date") @default(now())
  endDate               DateTime @map("end_date") @default(now())

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  coupon                Coupon    @relation(fields: [couponId], references: [couponId], onDelete: Cascade)
  user                  User      @relation(fields: [userId], references: [userId], onDelete: Cascade)
  order                 Order?    @relation(fields: [orderId], references: [orderId])
}

// Comment (评论表)
model Comment {
  commentId             Int      @id @default(autoincrement()) @map("comment_id")
  userId                Int      @map("user_id")
  username              String   @map("username") @default("")
  avatar                String   @map("avatar") @default("")
  productId             Int      @map("product_id")
  orderId               Int      @map("order_id") @default(0)
  orderItemId           Int      @map("order_item_id") @default(0)
  commentRank           Int      @map("comment_rank") @default(0)
  content               String   @map("content") @default("")
  addTime               DateTime @map("add_time") @default(now())
  status                Int      @map("status") @default(0)
  parentId              Int      @map("parent_id") @default(0)
  usefull               Int      @map("usefull") @default(0)
  useless               Int      @map("useless") @default(0)
  commentTag            String?  @map("comment_tag") // JSON data
  showPics              String?  @map("show_pics") // JSON data
  isRecommend           Int      @map("is_recommend") @default(0)
  isTop                 Int      @map("is_top") @default(0)
  isShowed              Int      @map("is_showed") @default(0)
  isDefault             Int      @map("is_default") @default(0)
  sortOrder             Int      @map("sort_order") @default(50)
  shopId                Int      @map("shop_id") @default(0)

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  user                  User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  product               Product  @relation(fields: [productId], references: [productId], onDelete: Cascade)
  parentComment         Comment?  @relation("CommentHierarchy", fields: [parentId], references: [commentId])
  replies               Comment[] @relation("CommentHierarchy")
}

// Favorite/Collect Product (收藏表)
model CollectProduct {
  collectId             Int      @id @default(autoincrement()) @map("collect_id")
  userId                Int      @map("user_id")
  productId             Int      @map("product_id")
  addTime               DateTime @map("add_time") @default(now())

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  user                  User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  product               Product  @relation(fields: [productId], references: [productId], onDelete: Cascade)

  @@unique([userId, productId])
}

// CollectShop (收藏店铺表)
model CollectShop {
  collectId             Int      @id @default(autoincrement()) @map("collect_id")
  userId                Int      @map("user_id")
  shopId                Int      @map("shop_id")
  addTime               DateTime @map("add_time") @default(now())
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  // Relationships
  user                  User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  shop                  Shop     @relation(fields: [shopId], references: [shopId], onDelete: Cascade)
  @@unique([userId, shopId])
}

// Brand (品牌表)
model Brand {
  brandId               Int      @id @default(autoincrement()) @map("brand_id")
  brandName             String   @map("brand_name") @default("")
  brandLogo             String   @map("brand_logo") @default("")
  brandDesc             String?  @map("brand_desc")
  siteUrl               String   @map("site_url") @default("")
  sortOrder             Int      @map("sort_order") @default(50)
  isShow                Int      @map("is_show") @default(1)
  brandType             String   @map("brand_type") @default("")
  brandIsHot            Int      @map("brand_is_hot") @default(0)
  firstWord             String   @map("first_word") @default("")
  isStoreBrand          Int      @map("is_store_brand") @default(0)
  checkStatus           Int      @map("check_status") @default(0)
  brandEnName           String   @map("brand_en_name") @default("")
  shopId                Int      @map("shop_id") @default(0)
  status                Int      @map("status") @default(0)
  rejectRemark          String?  @map("reject_remark")

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  // Relationships
  products              Product[]
}

// BlacklistedToken (黑名单令牌表)
model BlacklistedToken {
  id                    Int      @id @default(autoincrement())
  token                 String   @unique
  userId                Int      @map("user_id")
  expiresAt             DateTime @map("expires_at")
  createdAt             DateTime @default(now())

  // Relationships
  user                  User     @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("blacklisted_token")
}

// Article (文章表)
model Article {
  articleId             Int      @id @default(autoincrement()) @map("article_id")
  title                 String   @map("title") @default("")
  content               String   @map("content") @default("")
  image                 String?  @map("image")
  categoryId            Int      @map("category_id") @default(0)
  author                String   @map("author") @default("")
  source                String   @map("source") @default("")
  keywords              String   @map("keywords") @default("")
  description           String   @map("description") @default("")
  clickCount            Int      @map("click_count") @default(0)
  isShow                Int      @map("is_show") @default(1)
  sortOrder             Int      @map("sort_order") @default(100)
  addTime               DateTime @map("add_time") @default(now())

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("article")
}

