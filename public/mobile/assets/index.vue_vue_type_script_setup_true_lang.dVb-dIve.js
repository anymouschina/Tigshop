import{e,E as a,r as l,O as i,q as t,bC as u,y as r,c as p,o as s,bD as m,bE as c,G as o,a6 as n,L as d,a7 as f,bF as h,ad as b}from"./index-BKzbZvRR.js";const v=e({__name:"index",props:{limit:{type:Number,default:1},apiUrl:{type:String,default:"user/user/uploadImg"},modelValue:{type:[Array,Object],default:()=>[]},isValueArray:{type:Boolean,default:!1}},emits:["update:modelValue"],setup(e,{emit:v}){const{t:y}=a(),V=e,U=v,g=l([]);i((()=>V.modelValue),(e=>{if(!(g.value.length>0)&&e){if("object"==typeof e){if(Array.isArray(e)&&0===e.length)return;if(0===Object.values(e).length||!Object.values(e)[0])return}b((()=>{uni.$u.test.object(e)?g.value.push({url:f(e.picUrl),...e}):(g.value=e.map((e=>({url:f(e.picUrl),...e}))),A.value=e)}))}}),{immediate:!0,deep:!0});const A=l([]),x=e=>{1===e.file.length||1===V.limit?T(e.file[0]):e.file.forEach((e=>{T(e)}))},N=e=>{g.value.splice(e.index,1),V.limit>1||V.isValueArray?(A.value.splice(e.index,1),U("update:modelValue",A.value)):U("update:modelValue",{picName:"",picThumb:"",picUrl:""})},T=e=>{let a;m({url:h+"/api/"+V.apiUrl,filePath:e.url,name:"file",header:{Authorization:o("token"),Secret:c()},success:e=>{n();const{data:l}=JSON.parse(e.data);a=l.picThumb,g.value.push({url:f(a)}),V.limit>1||V.isValueArray?(A.value.push({picName:l.picName,picThumb:l.picThumb,picUrl:l.picUrl}),U("update:modelValue",A.value)):U("update:modelValue",{picName:l.picName,picThumb:l.picThumb,picUrl:l.picUrl}),d({title:y("图片上传成功")})},fail:e=>{n(),d({title:y("图片上传失败"),icon:"none"})}})};return(a,l)=>{const i=t(r("up-upload"),u);return s(),p(i,{previewFullImage:!0,fileList:g.value,onAfterRead:x,onDelete:N,name:"1",multiple:"",maxCount:e.limit,sizeType:["original","compressed"]},null,8,["fileList","maxCount"])}}});export{v as _};
